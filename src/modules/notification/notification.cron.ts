import { cronService } from "../cron/cron.service";
import { User } from "../user/user.model";
import { NotificationService } from "./notification.services";

export const initNotificationCron = ():void => {
  /**
   * schedule a cron job to run every day 
   * to send notification to users ... 
   * 
   * ------------------
   * 
   * and notification text must generated by chatgpt ..
   * 
   *  
   */

  console.log('âŒ›Scheduling notification every day .. âŒ›');

  cronService.schedule(
    'notification',
    '0 0 * * *', // At 00:00 AM every day'
    //'*/3 * * * *', // every 3 minute for testing
    "This will run every minute for testing", // additional message
    sendNotificationByChatGpt
  )}

/**
 * 
 * may be we dont need send notification by cron job..  
 */
export const sendNotificationByChatGpt = async (): Promise<void> => {
  try{

    console.log('Running cron job ðŸŒ€ sendNotificationByChatGpt ðŸŒ€');
    
    // Get the current date
    const currentDate = new Date();
    
    // Generate notification from chatgpt ... 

    // first we need to get the users current months all information .. 
    // like âš¡predictedPeriodStart âš¡ predictedPeriodEnd
    // âš¡ predictedOvulationDate âš¡ fertileWindow

    /**
     * we need to check all users lastProvideAccessPinCode date .. 
     * 
     * if that date  and present dates difference is greater than 30 days
     * then we dont send notification to the user .. 
     */
    // Calculate the date 30 days ago from now
    const thirtyDaysAgo = new Date();
    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);

    // Find users who ARE ACTIVE (have used pin code within last 30 days)
    // These are the users who SHOULD receive notifications
    const usersToNotify = await User.find({
      lastProvideAccessPinCode: {
        $exists: true,
        $ne: null,
        $gte: thirtyDaysAgo
      }
    });

    for (const user of usersToNotify) {
      // Send notification to each user
      console.log(`Sending notification to user: ðŸ”•ðŸ”• ${user.id}`);
      await NotificationService.sendNotificationByChatGpt(user.id, currentDate);
    }

    // let data = await new FertieService().predictAllDates(userId);

  }catch(error){
     console.error('Error in cron job sendNotificationByChatGpt from :', error);
  }
}